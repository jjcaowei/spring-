判断一个 9x9 的数独是否有效。只需要根据以下规则，验证已经填入的数字是否有效即可。
数字 1-9 在每一行只能出现一次。
数字 1-9 在每一列只能出现一次。
数字 1-9 在每一个以粗实线分隔的 3x3 宫内只能出现一次。

题解：
class Solution {
    public boolean isValidSudoku(char[][] board) {
        //初始化
        HashMap<Integer,Integer> []rows = new HashMap[9];//行规则
        HashMap<Integer,Integer> []cols = new HashMap[9];//列规则
        HashMap<Integer,Integer> []boxes = new HashMap[9];//盒规则
        for(int i=0;i<9;i++){
            rows[i] = new HashMap<Integer,Integer>();
            cols[i] = new HashMap<Integer,Integer>();
            boxes[i] = new HashMap<Integer,Integer>();
        }
        for(int i=0;i<9;i++){
            for(int j=0;j<9;j++){
                //如果方格中的数字存在
                if(board[i][j]!='.'){
                    int n = (int)board[i][j];
                    //计算出盒子所在的编号
                    int box_index = (i/3)*3+(j/3);
                    //对每一行，每一列，每一个格子所对应的hashmap进行赋值
                    rows[i].put(n,rows[i].getOrDefault(n,0)+1);
                    cols[j].put(n,cols[j].getOrDefault(n,0)+1);
                    boxes[box_index].put(n,boxes[box_index].getOrDefault(n,0)+1);
                    //若hashmap中的value大于1，则返回false
                    if(rows[i].get(n)>1 || cols[j].get(n)>1 || boxes[box_index].get(n)>1){
                        return false;
                    }
                }
            }
        }
        return true;
    }
}
